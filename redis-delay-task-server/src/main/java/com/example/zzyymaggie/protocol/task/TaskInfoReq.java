// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.example.zzyymaggie.protocol.task;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class TaskInfoReq {

	@TarsStructProperty(order = 0, isRequire = false)
	public String msgBody = "";
	@TarsStructProperty(order = 1, isRequire = false)
	public String topic = "";
	@TarsStructProperty(order = 2, isRequire = false)
	public int interval = 0;
	@TarsStructProperty(order = 3, isRequire = false)
	public long expiredTime = 0L;

	public String getMsgBody() {
		return msgBody;
	}

	public void setMsgBody(String msgBody) {
		this.msgBody = msgBody;
	}

	public String getTopic() {
		return topic;
	}

	public void setTopic(String topic) {
		this.topic = topic;
	}

	public int getInterval() {
		return interval;
	}

	public void setInterval(int interval) {
		this.interval = interval;
	}

	public long getExpiredTime() {
		return expiredTime;
	}

	public void setExpiredTime(long expiredTime) {
		this.expiredTime = expiredTime;
	}

	public TaskInfoReq() {
	}

	public TaskInfoReq(String msgBody, String topic, int interval, long expiredTime) {
		this.msgBody = msgBody;
		this.topic = topic;
		this.interval = interval;
		this.expiredTime = expiredTime;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(msgBody);
		result = prime * result + TarsUtil.hashCode(topic);
		result = prime * result + TarsUtil.hashCode(interval);
		result = prime * result + TarsUtil.hashCode(expiredTime);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof TaskInfoReq)) {
			return false;
		}
		TaskInfoReq other = (TaskInfoReq) obj;
		return (
			TarsUtil.equals(msgBody, other.msgBody) &&
			TarsUtil.equals(topic, other.topic) &&
			TarsUtil.equals(interval, other.interval) &&
			TarsUtil.equals(expiredTime, other.expiredTime) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		if (null != msgBody) {
			_os.write(msgBody, 0);
		}
		if (null != topic) {
			_os.write(topic, 1);
		}
		_os.write(interval, 2);
		_os.write(expiredTime, 3);
	}


	public void readFrom(TarsInputStream _is) {
		this.msgBody = _is.readString(0, false);
		this.topic = _is.readString(1, false);
		this.interval = _is.read(interval, 2, false);
		this.expiredTime = _is.read(expiredTime, 3, false);
	}

}
